buildscript {
  ext {
    springBootVersion = "1.5.7.RELEASE"
    springCloudVersion = "Dalston.SR3"
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
  }
}

plugins {
  id "idea"
  id "eclipse"
}

allprojects {

  apply plugin: "java"

  group = "daggerok"
  version = "0.0.1"
  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

  repositories {
    mavenCentral()
  }
}

subprojects {

  if (isDocker(project.projectDir.absolutePath)) return

  apply plugin: "org.springframework.boot"

  dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-actuator-docs")
    compile("org.springframework.boot:spring-boot-starter-amqp")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.cloud:spring-cloud-starter-bus-amqp")
    compile("org.springframework.cloud:spring-cloud-starter-config")
    compile("org.springframework.cloud:spring-cloud-starter-eureka")
    compile("org.springframework.cloud:spring-cloud-starter-hystrix")
    compile("org.springframework.cloud:spring-cloud-sleuth-stream")
    compile("org.springframework.cloud:spring-cloud-sleuth-zipkin-stream")
    compile("org.springframework.cloud:spring-cloud-starter")
    compile("org.springframework.cloud:spring-cloud-starter-vault-config")
    compile("org.springframework.cloud:spring-cloud-vault-config-consul")
    compile("org.springframework.cloud:spring-cloud-vault-config-databases")
    compile("org.springframework.cloud:spring-cloud-vault-config-rabbitmq")
    compile("org.springframework.cloud:spring-cloud-starter-stream-rabbit")
    compile("org.springframework.boot:spring-boot-starter-integration")
    compile("org.springframework.retry:spring-retry")
    compile("org.springframework.boot:spring-boot-starter-validation")
    runtime("org.springframework.boot:spring-boot-devtools")
    compileOnly("org.springframework.boot:spring-boot-configuration-processor")
    compileOnly("org.projectlombok:lombok")
    testCompile("org.springframework.boot:spring-boot-starter-test")
  }

  dependencyManagement {
    imports {
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
  }
}

wrapper {
  gradleVersion = "4.2"
  distributionType = "ALL"
}

def isDocker(def absPath) {
  def projectPath = absPath.replaceFirst(rootDir.absolutePath, "")
  projectPath.contains("docker")
}
